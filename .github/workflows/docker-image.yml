name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'main/api/**'
      - 'main/app/**'
      - 'main/manifests/**'
  workflow_dispatch:

jobs:
  build-and-push-api:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.commits.*.modified, 'main/api') || contains(github.event.commits.*.modified, 'main/manifests')
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.ACR_NAME }}
      ACR_URL: ${{ secrets.ACR_NAME }}.azurecr.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure and ACR
        run: |
          echo "Logging into Azure..."
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}
      
          echo "Logging into ACR: ${{ env.ACR_NAME }}..."
          az acr login --name ${{ env.ACR_NAME }}
      
          echo "Validating ACR access..."
          az acr show --name ${{ env.ACR_NAME }} --query "loginServer" --output tsv
      
          echo "Logged in successfully!"

      - name: Get Kubernetes credentials
        run: |
          az aks get-credentials \
            --resource-group DemoEG \
            --name EGClusterTest \
            --overwrite-existing

      - name: Build and push API image
        run: |
          docker build -t ${{ env.ACR_URL }}/demok8sapi:v_${{ github.run_number }} ./API
          docker push ${{ env.ACR_URL }}/demok8sapi:v_${{ github.run_number }}
          
      - name: Update Deployment YAML
        run: |
          sed -i "s|<IMAGE_TAG>|v_${{ github.run_number }}|g" manifests/api_deployment.yml
          
      - name: Deploy API to AKS
        run: |
          kubectl apply -f manifests/api_deployment.yaml

  build-and-push-app:
    if: github.event_name == 'workflow_dispatch' || contains(github.event.commits.*.modified, 'main/app') || contains(github.event.commits.*.modified, 'main/manifests')
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.ACR_NAME }}
      ACR_URL: ${{ secrets.ACR_NAME }}.azurecr.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure and ACR
        run: |
          echo "Logging into Azure..."
          az login --service-principal \
            --username ${{ secrets.AZURE_CLIENT_ID }} \
            --password ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}
      
          echo "Logging into ACR: ${{ env.ACR_NAME }}..."
          az acr login --name ${{ env.ACR_NAME }}
      
          echo "Validating ACR access..."
          az acr show --name ${{ env.ACR_NAME }} --query "loginServer" --output tsv
      
          echo "Logged in successfully!"
        
      - name: Get Kubernetes credentials
        run: |
          az aks get-credentials \
            --resource-group DemoEG \
            --name EGClusterTest \
            --overwrite-existing

      - name: Build and push APP image
        run: |
          docker build -t ${{ env.ACR_URL }}/react-app:v_${{ github.run_number }} ./APP
          docker push ${{ env.ACR_URL }}/react-app:v_${{ github.run_number }}

      - name: Update App Deployment YAML
        run: |
          sed -i "s|<IMAGE_TAG>|v_${{ github.run_number }}|g" manifests/app_deployment.yml

      - name: Deploy App to AKS
        run: |
          kubectl apply -f manifests/app_deployment.yaml
